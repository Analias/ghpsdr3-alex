#!/usr/bin/tclsh
# -*- mode: Tcl; tab-width: 8; -*-
#
# Copyright (C) 2016 by Roger E Critchlow Jr, Cambridge, MA, USA.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
# 

##
## external packages
##
package require Tcl

##
## our own sdr libraries
##
package require sdr::radio-model

##
## 
proc verbose-puts {msg} { if {[::radio cget -verbose]} { puts stderr $msg } }

##
## constants
##

# build the radio
sdr::radio-model ::radio -service [sdr::get-last service]

# load configuration
# current options
# memories
# last tuned points

# process arguments
proc optarg {opt} {
    upvar argc argc argv argv i i
    if {$i == $argc-1} { uplevel error "missing arg for $opt option" }
    set val [lindex $argv [incr i]]
    verbose-puts "optarg $opt found $val"
    if {$opt eq {-local}} {
	# puts "optarg found -local"
	::radio add-local $val
    } else {
	::radio configure $opt $val
    }
}

# specify options and create radios
for {set i 0} {$i < $argc} {incr i} {
    # accumulate arguments
    set opt [lindex $argv $i]
    switch -- $opt {
	-- { continue }
	-b - --band { optarg -band }
	-c - --connect { ::radio connect }
	-e - --filter { optarg -filter }
	-f - --frequency { optarg -frequency }
	-l - --local - --local-server { optarg -local }
	-m - --mode { optarg -mode }
	-n - --name - --name-of-server { optarg -name }
	-s - --service { optarg -service }
	-t - --text { optarg -text }
	-u - --ui { optarg -ui }
	-v - --verbose { optarg -verbose }
	default { error "unrecognized option [lindex $argv $i]" }
    }
}
